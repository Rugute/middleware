CREATE PROCEDURE sp_patient_demographics()
BEGIN
    declare scName varchar(250);
    declare q varchar(2000);

    DROP TABLE IF EXISTS rt_patient_demographics;
create table rt_patient_demographics (
patient_id INT(11),
given_name VA-RCHAR(50),
middle_name VARCHAR(50),
family_name VARCHAR(50),
Gender VARCHAR(10),
DOB DATE,
national_id_no VARCHAR(50),
unique_patient_no VARCHAR(50),
patient_clinic_number VARCHAR(15) DEFAULT NULL,
Tb_no VARCHAR(50),
district_reg_no VARCHAR(50),
hei_no VARCHAR(50),
phone_number VARCHAR(50) DEFAULT NULL,
birth_place VARCHAR(50) DEFAULT NULL,
citizenship VARCHAR(50) DEFAULT NULL,
email_address VARCHAR(50) DEFAULT NULL,
next_of_kin VARCHAR(100) DEFAULT NULL,
next_of_kin_phone VARCHAR(20) DEFAULT NULL,
next_of_kin_relationship VARCHAR(50) DEFAULT NULL,
marital_status VARCHAR(50) DEFAULT NULL,
education_level VARCHAR(50) DEFAULT NULL,
dead INT(11),
death_date DATE DEFAULT NULL,
voided INT(11),
index(patient_id),
index(Gender),
index(unique_patient_no),
index(DOB),
location_id INT(11)
);
     DROP TABLE IF EXISTS MySchemaNames;
    create table MySchemaNames (
        schemaName varchar(250)
    );
insert into MySchemaNames
    SELECT CONCAT(SCHEMA_NAME) AS DBNames
FROM `information_schema`.`SCHEMATA`
WHERE SCHEMA_NAME LIKE 'openmrs%';
label1:
LOOP
        set scName = (select schemaName from MySchemaNames limit 1);
        set @q = concat('
        insert into rt_patient_demographics(
patient_id,
given_name,
middle_name,
family_name,
Gender,
DOB,
dead,
voided,
death_date,
location_id
)
select
p.person_id,
p.given_name,
p.middle_name,
p.family_name,
p.gender,
p.birthdate,
p.dead,
p.voided,
p.death_date,
p.location_id
FROM (
select
p.person_id,
pn.given_name,
pn.middle_name,
pn.family_name,
p.gender,
p.birthdate,
p.dead,
p.voided,
p.death_date,
(select property_value FROM ', scname,'.global_property g where property=''kenyaemr.defaultLocation'') location_id

from ', scname,'.person p
left join ', scname,'.patient pa on pa.patient_id=p.person_id
left join ', scname,'.person_name pn on pn.person_id = p.person_id and pn.voided=0
GROUP BY p.person_id
) p ;
update rt_patient_demographics d
left outer join
(
select
pa.person_id,
max(if(pat.uuid=''8d8718c2-c2cc-11de-8d13-0010c6dffd0f'', pa.value, null)) as birthplace,
max(if(pat.uuid=''8d871afc-c2cc-11de-8d13-0010c6dffd0f'', pa.value, null)) as citizenship,
max(if(pat.uuid=''8d871d18-c2cc-11de-8d13-0010c6dffd0f'', pa.value, null)) as Mother_name,
max(if(pat.uuid=''b2c38640-2603-4629-aebd-3b54f33f1e3a'', pa.value, null)) as phone_number,
max(if(pat.uuid=''342a1d39-c541-4b29-8818-930916f4c2dc'', pa.value, null)) as next_of_kin_contact,
max(if(pat.uuid=''d0aa9fd1-2ac5-45d8-9c5e-4317c622c8f5'', pa.value, null)) as next_of_kin_relationship,
max(if(pat.uuid=''7cf22bec-d90a-46ad-9f48-035952261294'', pa.value, null)) as next_of_kin_address,
max(if(pat.uuid=''830bef6d-b01f-449d-9f8d-ac0fede8dbd3'', pa.value, null)) as next_of_kin_name,
max(if(pat.uuid=''b8d0b331-1d2d-4a9a-b741-1816f498bdb6'', pa.value, null)) as email_address,
(select property_value FROM ', scname,'.global_property g where property=''kenyaemr.defaultLocation'') location_id

from ', scname,'.person_attribute pa
inner join
(
select
pat.person_attribute_type_id,
pat.name,
pat.uuid
from ', scname,'.person_attribute_type pat
where pat.retired=0
) pat on pat.person_attribute_type_id = pa.person_attribute_type_id
and pat.uuid in (
	''8d8718c2-c2cc-11de-8d13-0010c6dffd0f'', -- birthplace
	''8d871afc-c2cc-11de-8d13-0010c6dffd0f'', -- citizenship
	''8d871d18-c2cc-11de-8d13-0010c6dffd0f'', -- mother''s name
	''b2c38640-2603-4629-aebd-3b54f33f1e3a'', -- telephone contact
	''342a1d39-c541-4b29-8818-930916f4c2dc'', -- next of kin''s contact
	''d0aa9fd1-2ac5-45d8-9c5e-4317c622c8f5'', -- next of kin''s relationship
	''7cf22bec-d90a-46ad-9f48-035952261294'', -- next of kin''s address
	''830bef6d-b01f-449d-9f8d-ac0fede8dbd3'', -- next of kin''s name
	''b8d0b331-1d2d-4a9a-b741-1816f498bdb6'' -- email address

	)
where pa.voided=0
group by pa.person_id
) att on att.person_id = d.patient_id and att.location_id=d.location_id
set d.phone_number=att.phone_number,
	d.next_of_kin=att.next_of_kin_name,
	d.next_of_kin_relationship=att.next_of_kin_relationship,
	d.next_of_kin_phone=att.next_of_kin_contact,
	d.phone_number=att.phone_number,
	d.birth_place = att.birthplace,
	d.citizenship = att.citizenship,
	d.email_address=att.email_address;
    update rtool.rt_patient_demographics d
join (select pi.patient_id,
max(if(pit.uuid=''05ee9cf4-7242-4a17-b4d4-00f707265c8a'',pi.identifier,null)) as upn,
max(if(pit.uuid=''d8ee3b8c-a8fc-4d6b-af6a-9423be5f8906'',pi.identifier,null)) district_reg_number,
max(if(pit.uuid=''c4e3caca-2dcc-4dc4-a8d9-513b6e63af91'',pi.identifier,null)) Tb_treatment_number,
max(if(pit.uuid=''b4d66522-11fc-45c7-83e3-39a1af21ae0d'',pi.identifier,null)) Patient_clinic_number,
max(if(pit.uuid=''49af6cdc-7968-4abb-bf46-de10d7f4859f'',pi.identifier,null)) National_id,
max(if(pit.uuid=''0691f522-dd67-4eeb-92c8-af5083baf338'',pi.identifier,null)) Hei_id
from ', scname,'.patient_identifier pi
join ', scname,'.patient_identifier_type pit on pi.identifier_type=pit.patient_identifier_type_id
where voided=0
group by pi.patient_id) pid on pid.patient_id=d.patient_id
set d.unique_patient_no=pid.UPN,
	d.national_id_no=pid.National_id,
	d.patient_clinic_number=pid.Patient_clinic_number,
    d.hei_no=pid.Hei_id,
    d.Tb_no=pid.Tb_treatment_number,
    d.district_reg_no=pid.district_reg_number
;

update rt_patient_demographics d
join (select o.person_id as patient_id,
max(if(o.concept_id in(1054),cn.name,null))  as marital_status,
max(if(o.concept_id in(1712),cn.name,null))  as education_level
from ', scname,'.obs o
join ', scname,'.concept_name cn on cn.concept_id=o.value_coded and cn.concept_name_type=''FULLY_SPECIFIED''
and cn.locale=''en''
where o.concept_id in (1054,1712) and o.voided=0
group by person_id) pstatus on pstatus.patient_id=d.patient_id
set d.marital_status=pstatus.marital_status,
d.education_level=pstatus.education_level;
  ');
PREPARE stmt1 FROM @q;
        EXECUTE stmt1;
        DEALLOCATE PREPARE stmt1;

        delete from MySchemaNames where schemaName = scName;
        IF ((select count(*) from MySchemaNames) > 0) THEN
            ITERATE label1;
        END IF;
        LEAVE label1;

    END LOOP label1;

    SELECT * FROM rt_patient_demographics;

END;
